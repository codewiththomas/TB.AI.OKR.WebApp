// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TB.AI.OKR.WebApp.Persistence.Contexts;

#nullable disable

namespace TB.AI.OKR.WebApp.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231003194718_VisionAdded")]
    partial class VisionAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("OkrRuleReferenceSource", b =>
                {
                    b.Property<int>("OkrRulesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReferencesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("OkrRulesId", "ReferencesId");

                    b.HasIndex("ReferencesId");

                    b.ToTable("OkrRuleReferenceSource");
                });

            modelBuilder.Entity("OkrSetReferenceSource", b =>
                {
                    b.Property<int>("OkrSetsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReferencesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("OkrSetsId", "ReferencesId");

                    b.HasIndex("ReferencesId");

                    b.ToTable("OkrSetReferenceSource");
                });

            modelBuilder.Entity("TB.AI.OKR.WebApp.Persistence.Entities.Label<TB.AI.OKR.WebApp.Persistence.Entities.OkrSet>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EntityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.ToTable("OkrSetLabels");
                });

            modelBuilder.Entity("TB.AI.OKR.WebApp.Persistence.Entities.Label<TB.AI.OKR.WebApp.Persistence.Entities.OkrSetElement>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EntityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.ToTable("OkrSetElementLabels");
                });

            modelBuilder.Entity("TB.AI.OKR.WebApp.Persistence.Entities.OkrRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4096)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Scope")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Severity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("OkrRules");

                    b.HasData(
                        new
                        {
                            Id = 19,
                            Description = "have excactly one objective",
                            IsActive = true,
                            Scope = 1,
                            Severity = 2,
                            Title = ""
                        },
                        new
                        {
                            Id = 20,
                            Description = "have not more than 5 key results",
                            IsActive = true,
                            Scope = 1,
                            Severity = 1,
                            Title = ""
                        },
                        new
                        {
                            Id = 21,
                            Description = "have at least 1 key result",
                            IsActive = true,
                            Scope = 1,
                            Severity = 2,
                            Title = ""
                        },
                        new
                        {
                            Id = 22,
                            Description = "have at least 3 key results",
                            IsActive = true,
                            Scope = 1,
                            Severity = 1,
                            Title = ""
                        },
                        new
                        {
                            Id = 23,
                            Description = "can be abbreviated with O",
                            IsActive = true,
                            Scope = 2,
                            Severity = 0,
                            Title = ""
                        },
                        new
                        {
                            Id = 24,
                            Description = "describes the \"What\"",
                            IsActive = true,
                            Scope = 2,
                            Severity = 0,
                            Title = ""
                        },
                        new
                        {
                            Id = 25,
                            Description = "expresses goals or intends",
                            IsActive = true,
                            Scope = 2,
                            Severity = 0,
                            Title = ""
                        },
                        new
                        {
                            Id = 26,
                            Description = "be aggressive, yet realistic",
                            IsActive = true,
                            Scope = 2,
                            Severity = 1,
                            Title = ""
                        },
                        new
                        {
                            Id = 27,
                            Description = "be tangible, objective, and unambigous",
                            IsActive = true,
                            Scope = 2,
                            Severity = 1,
                            Title = ""
                        },
                        new
                        {
                            Id = 28,
                            Description = "be obvious to a rational observer whether an objective has been achieved",
                            IsActive = true,
                            Scope = 2,
                            Severity = 1,
                            Title = ""
                        },
                        new
                        {
                            Id = 29,
                            Description = "provide clear value to the company when successful achieved",
                            IsActive = true,
                            Scope = 2,
                            Severity = 2,
                            Title = ""
                        },
                        new
                        {
                            Id = 30,
                            Description = "can be abbreviated with KR",
                            IsActive = true,
                            Scope = 3,
                            Severity = 0,
                            Title = ""
                        },
                        new
                        {
                            Id = 31,
                            Description = "describes the \"How\"",
                            IsActive = true,
                            Scope = 3,
                            Severity = 0,
                            Title = ""
                        },
                        new
                        {
                            Id = 32,
                            Description = "express measurable outcome",
                            IsActive = true,
                            Scope = 3,
                            Severity = 0,
                            Title = ""
                        },
                        new
                        {
                            Id = 33,
                            Description = "express an outcome instead an output",
                            IsActive = true,
                            Scope = 3,
                            Severity = 1,
                            Title = ""
                        },
                        new
                        {
                            Id = 34,
                            Description = "describe outcome, not activities (if words like consult, help, analyze, or participate are included, it describes activities)",
                            IsActive = true,
                            Scope = 3,
                            Severity = 1,
                            Title = ""
                        },
                        new
                        {
                            Id = 35,
                            Description = "measurable and verifiable",
                            IsActive = true,
                            Scope = 3,
                            Severity = 1,
                            Title = ""
                        },
                        new
                        {
                            Id = 36,
                            Description = "be difficult but not impossible to achieve",
                            IsActive = true,
                            Scope = 3,
                            Severity = 1,
                            Title = ""
                        });
                });

            modelBuilder.Entity("TB.AI.OKR.WebApp.Persistence.Entities.OkrSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorsRating")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Level")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vision")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("OkrSets");
                });

            modelBuilder.Entity("TB.AI.OKR.WebApp.Persistence.Entities.OkrSetElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("OkrSetId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OkrSetId");

                    b.ToTable("OkrSetElements");
                });

            modelBuilder.Entity("TB.AI.OKR.WebApp.Persistence.Entities.ReferenceSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReferenceSymbol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReferenceText")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ReferenceSources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ReferenceSymbol = "Niven & Lamorte, 2016",
                            ReferenceText = "Niven, P. R., Lamorte, B. (2016). Objectives and Key Results: Driving Focus, Alignment, and Engagement with OKRs. Wiley."
                        },
                        new
                        {
                            Id = 2,
                            ReferenceSymbol = "Lamorte, 2022",
                            ReferenceText = "Lamorte, B. (2022). The OKRs Fiel Book. Wiley."
                        },
                        new
                        {
                            Id = 3,
                            ReferenceSymbol = "Mello, 2019",
                            ReferenceText = "Mello, F. S. H. (2019). OKRs: From Mission to Metrics. Qulture."
                        },
                        new
                        {
                            Id = 4,
                            ReferenceSymbol = "Doerr, 2018",
                            ReferenceText = "Doerr, J. (2018). Measure What Matters. Penguin."
                        },
                        new
                        {
                            Id = 5,
                            ReferenceSymbol = "Wodtke, 2021",
                            ReferenceText = "Wodtke, C. (2021). Radical Focus. Second Edition. Cucina Media."
                        },
                        new
                        {
                            Id = 6,
                            ReferenceSymbol = "Hellesoe & Mewes, 2020",
                            ReferenceText = "Hellesoe, N., Mewes, S. (2020). OKRs at the Center. Sense & Respond Press."
                        },
                        new
                        {
                            Id = 7,
                            ReferenceSymbol = "Lobacher & Jacob (2020)",
                            ReferenceText = "Lobacher, P., Jacob, C. (2020). Objectives & Key Results: Das agile Betriebssystem für moderne Organisationen. die.agilen."
                        },
                        new
                        {
                            Id = 8,
                            ReferenceSymbol = "Kudernatsch, 2021",
                            ReferenceText = "Kudernatsch, D. (2021). Objectives and Key Results: Die Grundlagen der agilen Managementmethode OKR. Haufe."
                        },
                        new
                        {
                            Id = 9,
                            ReferenceSymbol = "Lange, 2022",
                            ReferenceText = "Lange, C. (2022). OKR in der Praxis. Business Village."
                        },
                        new
                        {
                            Id = 10,
                            ReferenceSymbol = "Kudernatsch, 2021",
                            ReferenceText = "Kudernatsch, D. (2021). Objectives and Key Results: Die Grundlagen der agilen Managementmethode OKR. Haufe."
                        },
                        new
                        {
                            Id = 11,
                            ReferenceSymbol = "Obogeanu-Hempel & Steiner, 2023",
                            ReferenceText = "Obogeanu-Hempel, E. M., Steiner, A. D. (2023). OKR - Objectives & Key Results. Gabal."
                        },
                        new
                        {
                            Id = 12,
                            ReferenceSymbol = "Mooncamp, 2023",
                            ReferenceText = "Mooncamp (2023). OKR Beispiele. https://mooncamp.com/de/okr-beispiele. Visited 03/10/2023."
                        },
                        new
                        {
                            Id = 13,
                            ReferenceSymbol = "Adobe, 2022",
                            ReferenceText = "Adobe Communications Team (2022). OKR Examples. https://business.adobe.com/blog/basics/okr-examples. Visited 03/10/2023."
                        },
                        new
                        {
                            Id = 14,
                            ReferenceSymbol = "Quantive, 2023",
                            ReferenceText = "Quantive (2023). 30+ Real OKR Examples for Different Teams. https://quantive.com/resources/articles/okr-examples. Visited 03/10/2023."
                        },
                        new
                        {
                            Id = 15,
                            ReferenceSymbol = "Bahlinger, 2023",
                            ReferenceText = "Bahlinger, M. (2023). OKR examples for different departments. https://www.workpath.com/magazine/okr-examples. WorkPath. Visited 06/09/2023."
                        },
                        new
                        {
                            Id = 16,
                            ReferenceSymbol = "Golightly, 2023",
                            ReferenceText = "Golightly, E. (2023). 60+ OKR Examples - How To Write Effective OKRs 2023. https://clickup.com/blog/okr-examples. ClickUp. Visited 03/10/2023."
                        },
                        new
                        {
                            Id = 17,
                            ReferenceSymbol = "Hall, 2022",
                            ReferenceText = "Hall, S. L. (2022). How to Write Effective OKRs - Plus Examples. https://lattice.com/library/how-to-write-effective-okrs-plus-examples. Lattice. Visited 03/10/2023."
                        });
                });

            modelBuilder.Entity("TB.AI.OKR.WebApp.Persistence.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("OkrSetId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Result")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("ReviewTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OkrSetId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("OkrRuleReferenceSource", b =>
                {
                    b.HasOne("TB.AI.OKR.WebApp.Persistence.Entities.OkrRule", null)
                        .WithMany()
                        .HasForeignKey("OkrRulesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TB.AI.OKR.WebApp.Persistence.Entities.ReferenceSource", null)
                        .WithMany()
                        .HasForeignKey("ReferencesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OkrSetReferenceSource", b =>
                {
                    b.HasOne("TB.AI.OKR.WebApp.Persistence.Entities.OkrSet", null)
                        .WithMany()
                        .HasForeignKey("OkrSetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TB.AI.OKR.WebApp.Persistence.Entities.ReferenceSource", null)
                        .WithMany()
                        .HasForeignKey("ReferencesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TB.AI.OKR.WebApp.Persistence.Entities.Label<TB.AI.OKR.WebApp.Persistence.Entities.OkrSet>", b =>
                {
                    b.HasOne("TB.AI.OKR.WebApp.Persistence.Entities.OkrSet", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("TB.AI.OKR.WebApp.Persistence.Entities.Label<TB.AI.OKR.WebApp.Persistence.Entities.OkrSetElement>", b =>
                {
                    b.HasOne("TB.AI.OKR.WebApp.Persistence.Entities.OkrSetElement", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("TB.AI.OKR.WebApp.Persistence.Entities.OkrSetElement", b =>
                {
                    b.HasOne("TB.AI.OKR.WebApp.Persistence.Entities.OkrSet", "OkrSet")
                        .WithMany("OkrSetElements")
                        .HasForeignKey("OkrSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OkrSet");
                });

            modelBuilder.Entity("TB.AI.OKR.WebApp.Persistence.Entities.Review", b =>
                {
                    b.HasOne("TB.AI.OKR.WebApp.Persistence.Entities.OkrSet", null)
                        .WithMany("Reviews")
                        .HasForeignKey("OkrSetId");
                });

            modelBuilder.Entity("TB.AI.OKR.WebApp.Persistence.Entities.OkrSet", b =>
                {
                    b.Navigation("OkrSetElements");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
