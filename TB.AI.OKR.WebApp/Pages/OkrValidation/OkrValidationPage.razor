@page "/okr-validation"
@page "/okr-validation/{Id:int}"

@using TB.AI.OKR.WebApp.Dtos;
@using TB.AI.OKR.WebApp.Persistence.Entities;
@using TB.OpenAI.ApiClient;

<h3>OkrValidationPage</h3>

@if (!IsLoaded)
{
    <div>Loading...</div>
}
else
{
    <FluentStack Orientation="Orientation.Vertical">

        <FluentTextArea @bind-Value="OkrSetDto.Objective" Cols="100" Rows="3" Resize="TextAreaResize.Both">
            <span>Objective</span>
        </FluentTextArea>

        @for (int i = 0; i < OkrSetDto.KeyResults.Count(); i++)
        {
            var localIndex = i;
            <FluentTextArea Id="localIndex" @bind-Value="OkrSetDto.KeyResults[localIndex].Text" Cols="75" Rows="2" Resize="TextAreaResize.Both">
                <span>Key Result @((localIndex + 1).ToString())</span>
            </FluentTextArea>
        }

    </FluentStack>
}



@code {

    [Inject] public IOpenAiApiClient? OpenAiApiClient { get; set; }
    [Inject] private IOkrSetRepository? OkrRepository { get; set; }

    [Parameter] public int? Id { get; set; }

    public OkrSetDto OkrSetDto { get; set; } = new();


    public string Prompt { get; set; } = string.Empty;
    public string Answer { get; set; } = string.Empty;
    public IEnumerable<string> DebugInfos { get; set; } = new List<string>();

    public bool IsLoaded { get; set; } = false;


    /// <summary>
    /// Gets called before every render of the component, as soon as the parameters (Id) is set.
    /// </summary>
    /// <returns></returns>
    protected override async Task OnParametersSetAsync()
    {
        if (Id.HasValue)
        {
            var okr = await OkrRepository!.GetByIdAsync(Id.Value);

            if (okr is not null)
            {
                var objective = okr.OkrSetElements
                    .FirstOrDefault(x => x.Type.Equals("objective"));

                OkrSetDto.Objective = objective?.Text ?? string.Empty;

                var keyResults = okr.OkrSetElements
                    .Where(x => x.Type.Equals("keyresult"))
                    .ToList();

                if (keyResults.Count() > 0)
                {
                    OkrSetDto.KeyResults = keyResults;
                }
            }
        }
        await base.OnParametersSetAsync();

        IsLoaded = true;
    }


    
}
