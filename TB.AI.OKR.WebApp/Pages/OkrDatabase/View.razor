@page "/okr-database/view/{Id:int}"

@using Microsoft.Fast.Components.FluentUI;

<h3>View OKR set</h3>

@if (!IsLoaded)
{
    <div>Loading....</div>
}
else
{
    <div>@(new MarkupString(OkrSet.ToSetString("<br/>")))</div>

    <FluentDataGrid Items="OkrSetLabels.AsQueryable()">
        <PropertyColumn Property="@(x => x.LabelName)"></PropertyColumn>
        
        @foreach (var labelProvider in OkrSetLabels.Select(x => x.LabelProvider).Order().Distinct())
        {
            <PropertyColumn Property="@(x => x.Value)" Title="@($"Provider: {labelProvider}")">

            </PropertyColumn>
        }

    </FluentDataGrid>


    <FluentDivider></FluentDivider>

    foreach (var elementType in new string[] { "objective", "keyresult" })
    {
        if (OkrSet.OkrSetElements.Any(x => x.Type.Equals(elementType)))
        {
            var elements = OkrSet.OkrSetElements.Where(x => x.Type.Equals(elementType)).AsQueryable();

            foreach (var element in elements)
            {
                var labels = OkrSetElementLabels
                    .Where(x => x.EntityId == element.Id)
                    .AsQueryable();

                <h5>@element.ToString()</h5>

                <FluentDataGrid Items="labels">
                    <PropertyColumn Property="@(x => x.LabelName)"></PropertyColumn>

                    @foreach (var labelProvider in OkrSetLabels.Select(x => x.LabelProvider).Order().Distinct())
                    {
                        <PropertyColumn Property="@(x => x.Value)" Title="@($"Provider: {labelProvider}")">

                        </PropertyColumn>
                    }

                </FluentDataGrid>

            }
        }
    }




 }


@code {

    [Inject] private NavigationManager? NavigationManager { get; set; }
    [Inject] private ILabelRepository? LabelRepository { get; set; }
    [Inject] private IOkrSetRepository? OkrRepository { get; set; }
    [Inject] private IReferenceSourceRepository? ReferenceSourceRepository { get; set; }
    [Inject] private IToastService? ToastService { get; set; }

    [Parameter] public int Id { get; set; }

    public bool IsLoaded { get; set; } = false;

    private OkrSet OkrSet { get; set; } = new();
    private IList<Label<OkrSet>> OkrSetLabels { get; set; } = new List<Label<OkrSet>>();
    private IList<Label<OkrSetElement>> OkrSetElementLabels { get; set; } = new List<Label<OkrSetElement>>();

    protected override async Task OnParametersSetAsync()
    {
        var okrSet = await OkrRepository!.GetByIdAsync(Id);

        if (okrSet is null)
        {
            ToastService!.ShowSuccess($"No OKR set to Id = {Id}.");
            NavigationManager!.NavigateTo("/okr-database");
        }

        OkrSet = okrSet!;

        var okrSetLabels = await LabelRepository!.GetOkrSetLabelsAsync(new LabelsFilter
            {
                EntityIds = new int[] { okrSet!.Id }
            });
        OkrSetLabels = okrSetLabels;

        if (okrSet.OkrSetElements.Any())
        {
            var okrSetElementLabels = await LabelRepository!.GetOkrSetElementLabelsAsync(new LabelsFilter
                {
                    EntityIds = okrSet.OkrSetElements.Select(x => x.Id).ToArray()
                });
            OkrSetElementLabels = okrSetElementLabels;
        }

        IsLoaded = true;
    }
}

